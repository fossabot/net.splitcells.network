#!/usr/bin/env python3
#https://stackoverflow.com/questions/1523427/what-is-the-common-header-format-of-python-files
# TODO calculate return code
import subprocess
import sys
from pathlib import Path
# TODO FIXME If file not present in path this script should continue.
# TODO listener scripts
def executeCommand(command):
	"""Returns whether the next commands needs to be executed."""
	# TODO Check if command exsists.
	print('Executing ' + ' '.join(command))
	returnCode = subprocess.call(command) # This call raises an error if the command is not found.
	return returnCode == 0
def managedCommandExecution(type, command): # RENAME
	executionCounter = 0
	managedCommand = commandAt(command, executionCounter)
	# TODO disjunction
	while not executeCommand(managedCommand) or type == 'conjunction': # TODO Execution ends with exception, which is a false return value.
		executionCounter+=1
		managedCommand = commandAt(command, executionCounter)
def commandAt(command, number):
	rVal = command.copy()
	rVal[0] = rVal[0] + '.' + str(number)
	return rVal
if __name__ == '__main__':
	managedCommandExecution(sys.argv[1], sys.argv[2:]) # The first (0) command is the this script itself.
