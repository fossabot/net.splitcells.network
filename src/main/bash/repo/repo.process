#!/usr/bin/env bash
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# $@: Should only contain managed commands as there may be different repositories.

case $1 in "ssh://"*)
	echo Connecting to '"'$1'"'.
	if ssh $1 "test -f $2/.repo"; then
		if ssh $1 "grep -q 'repo.type=meta' $2/.repo"; then
			if ssh $1 "grep -q 'repo.structure=flat' $2/.repo"; then
				sshChildren=$(ssh $1 "cd $2; find . -mindepth 1 -maxdepth 1 -type d")
				for childFolder in $sshChildren
				do
					# Ommiting quotes in for loop header causes it to iterate over the lines of the string.
					echo meta repo found
					subrepo=$childFolder
					echo $subrepo
					echo Processing child "'"$childFolder"'".
					if ssh $1 "test -f $2/$subrepo/.repo"; then
					mkdir -p $childFolder
						cd $childFolder
						repo.process $1 $2/$subrepo "${@:3}"
						cd ..
					else
						echo "${@:3}" "$1" "$2"/$subrepo
						eval "${@:3}" "$1" "$2"/$subrepo
					fi
				done
			fi
		fi
	else
		echo Processing "'"$(pwd)"'".
		eval "${@:3}" "$1":"$2"/$subrepo
	fi
	exit
esac

optionalRepoConf="./.repo"
subrepo=''
if test -f "./.repo"; then
	if grep -q 'repo.type=meta' "$optionalRepoConf"; then
		if grep -q 'repo.structure=flat' "$optionalRepoConf"; then
			folders.current|while read childFolder; do
				subrepo=$childFolder
				echo Processing "'"$childFolder"'".
				cd $childFolder
				eval "$@"
				cd ..
			done
		fi
	fi
else
	echo Processing "'"$(pwd)"'".
	eval "$@" # Through the bash command, pipes are supported.
fi