#!/usr/bin/env python3
__author__ = 'Mārtiņš Avots'
import argparse
import os
from pathlib import Path
from pathlib import PosixPath
import shutil
import re
from os import environ
def currentFolder():
	return Path.cwd()
class Command:
	def __init__(self
			, projectPath
			, targetFolder = Path.home().joinpath('bin', 'net.splitcells.os.state.interface.commands.managed')
			):
		projectPosixPath = PosixPath(projectPath)
		self.projectName = projectPosixPath.name
		self.binFolder = projectPosixPath.joinpath('bin')
		self.targetFolder = targetFolder
	def install(self):
		for projectCommand in self.binFolder.rglob("*"):
			globalProjectCommandName = self.projectName + '.' + projectCommand.name
			shutil.copy(projectCommand, self.targetFolder.joinpath(globalProjectCommandName))
if __name__ == '__main__':
	if environ.get('log_level') == 'debug':
		logging.basicConfig(level=logging.DEBUG)
	parser = argparse.ArgumentParser(description='Installs projects command to ~/bin/net.splitcells.os.state.interface.commands.managed.')
	parser.add_argument('--project', nargs='?', type=str, help='Path to the project to be installed.')
	parsedArgs = parser.parse_args()
	Command(parsedArgs.project).install()
