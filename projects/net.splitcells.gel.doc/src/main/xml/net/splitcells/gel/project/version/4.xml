<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns="http://splitcells.net/den.xsd" xmlns:p="http://splitcells.net/private.xsd"
         xmlns:s="http://splitcells.net/sew.xsd" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:g="http://splitcells.net/gal.xsd" xmlns:foaf="http://xmlns.com/foaf/0.1/"
         xmlns:e="http://splitcells.net/sen.xsd">
    <solution>
        <objective>
            Make Gel a usable program
            <objective>Support interactive problem solving via Website.
                <solution>Use pseudo CSV format (variable length lines) as input, where the first row describes the
                    line type. This means that multiple tables can be extracted from the single CSV.
                </solution>
                <solution>Create and publish Flathub image and AppImage (KDE).
                    <solution>Create electron and server version.</solution>
                </solution>
                <solution>Create docker image.</solution>
            </objective>
            <objective>Create docker image, so Gel tests can be easily run on another server .
                <problem>
                    The Gel docker image could sent the results to the server software.
                    <solution>Save execution results/logs into monitoring software (Prometheus) and visualize (Grafana)
                        it.
                        <toDo>Create project "net.splitcells.network.host", which is the source code of the
                            infrastructure.
                            <objective>Should be deployable via one command and extendable with other projects for i.e.
                                private
                                projects.
                            </objective>
                        </toDo>
                    </solution>
                </problem>
            </objective>
            <objective>Render constraint tree to HTML.</objective>
            <objective>Render logs.</objective>
        </objective>
        <scheduling>
            <priority>
                <queue>
                    <toDo xl:href="https://www.heise.de/news/Testing-Mit-Jazzer-erscheint-ein-Open-Source-Fuzzer-fuer-JVM-Anwendungen-5050930.html">
                        Implement fuzzing.
                    </toDo>
                    <toDo>Implement a Meta Optimization based on Input like TemplateInitializer's input.</toDo>
                </queue>
            </priority>
        </scheduling>
    </solution>
    <unscheduled>
    </unscheduled>
</project>